[{"/home/pc/fe/counter/fe/src/App.js":"1","/home/pc/fe/counter/fe/src/index.js":"2","/home/pc/fe/counter/fe/src/reportWebVitals.js":"3"},{"size":5293,"mtime":1609820158336,"results":"4","hashOfConfig":"5"},{"size":680,"mtime":1609530900810,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609530900810,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"xwlt5x",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pc/fe/counter/fe/src/App.js",["15","16","17"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {Button, Card, DatePicker, Form, Input, Layout, Typography} from 'antd';\nimport styled from 'styled-components'\nimport moment from \"moment\";\nimport 'moment/locale/ru'\nimport axios from \"axios\";  // without this line it didn't work\n\nmoment.locale('ru')\n\n\nconst BACKEND_FORMAT = 'YYYY-MM-DD'\nconst LEFT_ID = 1\nconst RIGHT_ID = 0\n\n\n\nconst { Title } = Typography;\n\nconst { Header, Content } = Layout;\n\nconst StyledLayout = styled(Layout)`\n    width: 100%;\n    text-align: center;\n    padding: 32px;\n    min-height: 100vh;\n`\n\nconst StyledHeader = styled(Header)`\n    display: flex;\n    align-items: center;\n    \n    h1 {\n        color: white;\n        margin: 0 auto;\n    }\n`\n\nconst StyledContent = styled(Content)`\n    padding-top: 32px;\n`\n\nconst StyledWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst StyledCard = styled(Card)`\n    margin: 32px;\n    border: 1px solid ${props => props.error ? 'red' : 'transparent'}\n`\n\nconst StyledForm = styled.div`\n    margin: 100px auto;\n    width: 420px;\n    border: 1px solid gray;\n    padding: 32px;\n    border-radius: 4px;\n`\n\nconst StyledError = styled.p`\n   color: red;\n   font-size: 1.5em;\n   font-weight: bold;\n`\n\n\nexport const App = () => {\n    const [left, setLeft] = useState(0)\n    const [right, setRight] = useState(0)\n\n    const [errorLeft, setErrorLeft] = useState(false)\n    const [errorRight, setErrorRight] = useState(false)\n\n\n    const [pastLeft, setPastLeft] = useState(0)\n    const [pastRight, setPastRight] = useState(0)\n\n    const [error, setError] = useState(false)\n    const [date, setDate] = useState()\n    const [time, setTime] = useState()\n\n\n    useEffect(\n        () => {\n            let timer = setInterval(() => {\n                setDate(moment().format('LL'))\n                setTime(moment().format('LTS'))\n            }, 1000)\n\n            return () => {\n                clearTimeout(timer)\n            }\n        },\n        []\n    )\n\n\n    //fetching effects\n    useEffect(\n        () => {\n            let timer = setInterval(() => {\n                const timestamp = moment().format(BACKEND_FORMAT)\n\n                fetchData(LEFT_ID, timestamp)\n                   .then(data => {\n                       setLeft(data.data?.egg_count)\n                       setErrorLeft(false)\n                   })\n                   .catch(err => {\n                       console.log(err)\n                       setErrorLeft(true)\n                   })\n\n                fetchData(RIGHT_ID, timestamp)\n                   .then(data => {\n                       setRight(data.data?.egg_count)\n                       setErrorRight(false)\n                   })\n                   .catch(err => {\n                       console.log(err)\n                       setErrorRight(true)\n                   })\n\n            }, 10000)\n\n            return () => {\n                clearTimeout(timer)\n            }\n        },\n        []\n    )\n\n\n    const fetchData = (id, date) => {\n        return axios.post('http://localhost:5000/getCount', {\n            \"conveyor_id\": id,\n            \"date\": date\n        })\n    }\n\n    const handleChange = value => {\n        console.log('Success:', value);\n\n        if (value) {\n            const preparedDate = moment(value).format(BACKEND_FORMAT)\n            setError(false)\n\n            fetchData(LEFT_ID, preparedDate)\n                .then(data => {\n                    setPastLeft(data.data?.egg_count)\n                })\n                .catch(err => {\n                    console.log(err)\n                    setError(true)\n                })\n\n            fetchData(RIGHT_ID, preparedDate)\n                .then(data => {\n                    setPastRight(data.data?.egg_count)\n                })\n                .catch(err => {\n                    console.log(err)\n                    setError(true)\n                })\n\n        }\n    };\n\n    return (\n        <StyledLayout>\n            <StyledHeader>\n                <Title>CloudVision</Title>\n            </StyledHeader>\n            <StyledContent>\n                <Title level={2}>Веранда №1</Title>\n                <Title level={4}>{date} <br/> {time}</Title>\n                <StyledWrapper>\n                    <StyledCard error={errorLeft} title=\"Левая Лента\">{left}</StyledCard>\n                    <StyledCard error={errorRight} title=\"Правая Лента\">{right}</StyledCard>\n                </StyledWrapper>\n\n                <StyledForm>\n                    <Title level={5}>Здесь можно посмотреть данные счетчика за прошлые дни</Title>\n                    <br/>\n                    <DatePicker onChange={handleChange} format={'DD/MM/YYYY'}/>\n                    <StyledWrapper>\n                        <StyledCard error={error} title=\"Левая Лента\">{pastLeft}</StyledCard>\n                        <StyledCard error={error} title=\"Правая Лента\">{pastRight}</StyledCard>\n                    </StyledWrapper>\n                </StyledForm>\n                {error && <StyledError>Что-то пошло не так, свяжитесь с поддержкой.</StyledError>}\n            </StyledContent>\n        </StyledLayout>\n    )\n}\n","/home/pc/fe/counter/fe/src/index.js",[],"/home/pc/fe/counter/fe/src/reportWebVitals.js",[],{"ruleId":"18","severity":1,"message":"19","line":3,"column":9,"nodeType":"20","messageId":"21","endLine":3,"endColumn":15},{"ruleId":"18","severity":1,"message":"22","line":3,"column":35,"nodeType":"20","messageId":"21","endLine":3,"endColumn":39},{"ruleId":"18","severity":1,"message":"23","line":3,"column":41,"nodeType":"20","messageId":"21","endLine":3,"endColumn":46},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Input' is defined but never used."]