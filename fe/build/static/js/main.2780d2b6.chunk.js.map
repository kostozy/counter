{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["moment","locale","BACKEND_FORMAT","Title","Typography","Header","Layout","Content","StyledLayout","styled","StyledHeader","StyledContent","StyledWrapper","div","StyledCard","Card","props","error","StyledForm","StyledError","p","App","useState","left","setLeft","right","setRight","errorLeft","setErrorLeft","errorRight","setErrorRight","pastLeft","setPastLeft","pastRight","setPastRight","setError","date","setDate","time","setTime","useEffect","timer","setInterval","format","clearTimeout","timestamp","fetchData","then","data","egg_count","catch","err","console","log","id","axios","post","level","title","onChange","value","preparedDate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2780d2b6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {Button, Card, DatePicker, Form, Input, Layout, Typography} from 'antd';\nimport styled from 'styled-components'\nimport moment from \"moment\";\nimport 'moment/locale/ru'\nimport axios from \"axios\";  // without this line it didn't work\n\nmoment.locale('ru')\n\n\nconst BACKEND_FORMAT = 'YYYY-MM-DD'\nconst LEFT_ID = 1\nconst RIGHT_ID = 0\n\n\n\nconst { Title } = Typography;\n\nconst { Header, Content } = Layout;\n\nconst StyledLayout = styled(Layout)`\n    width: 100%;\n    text-align: center;\n    padding: 32px;\n    min-height: 100vh;\n`\n\nconst StyledHeader = styled(Header)`\n    display: flex;\n    align-items: center;\n    \n    h1 {\n        color: white;\n        margin: 0 auto;\n    }\n`\n\nconst StyledContent = styled(Content)`\n    padding-top: 32px;\n`\n\nconst StyledWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst StyledCard = styled(Card)`\n    margin: 32px;\n    border: 1px solid ${props => props.error ? 'red' : 'transparent'}\n`\n\nconst StyledForm = styled.div`\n    margin: 100px auto;\n    width: 420px;\n    border: 1px solid gray;\n    padding: 32px;\n    border-radius: 4px;\n`\n\nconst StyledError = styled.p`\n   color: red;\n   font-size: 1.5em;\n   font-weight: bold;\n`\n\n\nexport const App = () => {\n    const [left, setLeft] = useState(0)\n    const [right, setRight] = useState(0)\n\n    const [errorLeft, setErrorLeft] = useState(false)\n    const [errorRight, setErrorRight] = useState(false)\n\n\n    const [pastLeft, setPastLeft] = useState(0)\n    const [pastRight, setPastRight] = useState(0)\n\n    const [error, setError] = useState(false)\n    const [date, setDate] = useState()\n    const [time, setTime] = useState()\n\n\n    useEffect(\n        () => {\n            let timer = setInterval(() => {\n                setDate(moment().format('LL'))\n                setTime(moment().format('LTS'))\n            }, 1000)\n\n            return () => {\n                clearTimeout(timer)\n            }\n        },\n        []\n    )\n\n\n    //fetching effects\n    useEffect(\n        () => {\n            let timer = setInterval(() => {\n                const timestamp = moment().format(BACKEND_FORMAT)\n\n                fetchData(LEFT_ID, timestamp)\n                   .then(data => {\n                       setLeft(data.data?.egg_count)\n                       setErrorLeft(false)\n                   })\n                   .catch(err => {\n                       console.log(err)\n                       setErrorLeft(true)\n                   })\n\n                fetchData(RIGHT_ID, timestamp)\n                   .then(data => {\n                       setRight(data.data?.egg_count)\n                       setErrorRight(false)\n                   })\n                   .catch(err => {\n                       console.log(err)\n                       setErrorRight(true)\n                   })\n\n            }, 10000)\n\n            return () => {\n                clearTimeout(timer)\n            }\n        },\n        []\n    )\n\n\n    const fetchData = (id, date) => {\n        return axios.post('http://localhost:5000/getCount', {\n            \"conveyor_id\": id,\n            \"date\": date\n        })\n    }\n\n    const handleChange = value => {\n        console.log('Success:', value);\n\n        if (value) {\n            const preparedDate = moment(value).format(BACKEND_FORMAT)\n            setError(false)\n\n            fetchData(LEFT_ID, preparedDate)\n                .then(data => {\n                    setPastLeft(data.data?.egg_count)\n                })\n                .catch(err => {\n                    console.log(err)\n                    setError(true)\n                })\n\n            fetchData(RIGHT_ID, preparedDate)\n                .then(data => {\n                    setPastRight(data.data?.egg_count)\n                })\n                .catch(err => {\n                    console.log(err)\n                    setError(true)\n                })\n\n        }\n    };\n\n    return (\n        <StyledLayout>\n            <StyledHeader>\n                <Title>CloudVision</Title>\n            </StyledHeader>\n            <StyledContent>\n                <Title level={2}>Веранда №1</Title>\n                <Title level={4}>{date} <br/> {time}</Title>\n                <StyledWrapper>\n                    <StyledCard error={errorLeft} title=\"Левая Лента\">{left}</StyledCard>\n                    <StyledCard error={errorRight} title=\"Правая Лента\">{right}</StyledCard>\n                </StyledWrapper>\n\n                <StyledForm>\n                    <Title level={5}>Здесь можно посмотреть данные счетчика за прошлые дни</Title>\n                    <br/>\n                    <DatePicker onChange={handleChange} format={'DD/MM/YYYY'}/>\n                    <StyledWrapper>\n                        <StyledCard error={error} title=\"Левая Лента\">{pastLeft}</StyledCard>\n                        <StyledCard error={error} title=\"Правая Лента\">{pastRight}</StyledCard>\n                    </StyledWrapper>\n                </StyledForm>\n                {error && <StyledError>Что-то пошло не так, свяжитесь с поддержкой.</StyledError>}\n            </StyledContent>\n        </StyledLayout>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ConfigProvider} from \"antd\";\nimport locale from 'antd/lib/locale/ru_RU';\n\nReactDOM.render(\n  <React.StrictMode>\n      <ConfigProvider locale={locale}>\n        <App />\n      </ConfigProvider>;\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}